import os
import glob
import nibabel as nib
import numpy as np
import pandas as pd

# -----------------------------
# Input paths
# -----------------------------
lesion_dir = "/Users/idarangus/Desktop/Files/PROJECTS/SA-Axis/lesions"
atlas_path = "/Users/idarangus/Desktop/Files/PROJECTS/SA-Axis/rjhu.nii"
labels_path = "/Users/idarangus/Desktop/Files/PROJECTS/SA-Axis/jhu.txt"
output_csv = "/Users/idarangus/Desktop/Files/PROJECTS/SA-Axis/JHU_lesion_volumes_byROI.csv"

# -----------------------------
# Load atlas and labels
# -----------------------------
atlas_img = nib.load(atlas_path)
atlas_data = atlas_img.get_fdata().astype(int)
voxel_vol_cm3 = np.prod(atlas_img.header.get_zooms()) / 1000.0  # mm³ -> cm³

labels = pd.read_csv(labels_path, sep="|", header=None,
                     names=["Index", "Abbrev", "Name", "Type"])

# -----------------------------
# Prepare output dataframe
# -----------------------------
results = []

# lesion files
lesion_files = sorted(glob.glob(os.path.join(lesion_dir, "rM*_lesion.nii")))

for lf in lesion_files:
    subj_id = os.path.basename(lf).split("_")[0]
    lesion_img = nib.load(lf)
    lesion_data = lesion_img.get_fdata() > 0
    
    subj_dict = {"Participant": subj_id}
    
    for _, row in labels.iterrows():
        roi_idx = row["Index"]
        roi_abbrev = row["Abbrev"]
        
        mask_roi = atlas_data == roi_idx
        overlap_vox = np.logical_and(mask_roi, lesion_data).sum()
        lesion_vol_cm3 = overlap_vox * voxel_vol_cm3
        
        subj_dict[roi_abbrev] = lesion_vol_cm3
    
    results.append(subj_dict)

# Save
df = pd.DataFrame(results)
df.to_csv(output_csv, index=False)
print(f"Saved results to {output_csv}")
